  $existingOrder = OrderDetail::where('user_id', $user)->first();

        // $token = $existingOrder->payment_id;
        // dd($token);
        if ($existingOrder && isset($existingOrder->payment_id)) {
            $existingOrder = OrderDetail::where('payment_id', $existingOrder->payment_id)->first();
            return response()->json(['message' => 'Payment already completed']);
        } else {

            $total_sum = 0; // Initialize total
            $product_ids = []; // Initialize product_ids as an empty array
            $quantity = [];
            foreach ($get_cart as $item) {
                $total_sum += $item->quantity * $item->price; // Add to total
                $product_ids[] = $item->product_id; // Add product_id to the array
                $quantity = $item->quantity;
            }

            $payment_id = Str::Random(10);

            $userId = $user;
            $total = $total_sum;
            $quantity = "1";
            $productId = implode(',', $product_ids);
            $price =

            // Create a new order detail
            $orderDetail = OrderDetail::create([
                'user_id' => $userId,
                'total' => $total,
                'payment_id' => $payment_id, // Assuming the payment id is in the response
            ]);

            // dd($orderDetail);
            // Create a new order item
            OrderItem::create([
                'order_id' => $orderDetail->id,
                'quantity' => $quantity,
                'product_id' => $productId,
            ]);

            // $order = OrderItem::all();
            // dd($order);

            // Create a new payment detail
            PaymentDetail::create([
                'order_id' => $orderDetail->id,
                'price' => $total,
                'status' => "1",
            ]);
            $delete_row = Cart::where('user_id', $user)->delete();

            // dd($delete_row);s

            // dd("vbvb");
        }
        
    }

    // $payment = Order::select('orders.*', 'users.name as user_name', 'products.name as product_name', 'products.id')
        //     ->join('products', 'orders.product_id', '=', 'products.id')
        //     ->join('users', 'orders.user_id', '=', 'users.id')->get();

        //     $payment = Order::select('orders.*', 'users.name',
        //         DB::raw('GROUP_CONCAT(products.name) AS ProductNames'),
        //         DB::raw('GROUP_CONCAT(products.id) AS ProductIDs'))
        //         ->join('users', 'orders.user_id', '=', 'users.id')
        //         ->join('products', function ($join) {
        //             $join->whereRaw('FIND_IN_SET(products.id, orders.product_id)');
        //         })

        // ->groupBy('orders.id')
        // ->get();

        // $client_id = 'AY-9F1CQO2vXBFBbGC-9WsT1GFohiKtc25L8U2P_ZObCrkyw1Q0rM6RsNoo1L27xy0R6ow7lYzljYtHr';
        // $secret = 'EMIZLR8HMRIy-DMzOGKm5ejXduMkUelz3Gb-mL_sRBV2n7AshPEKreVRp1ozUakJJBJ1ydlcTr3M5epB';

        // $encoded_auth = base64_encode($client_id . ':' . $secret);
        // $today = date("Y-m-d");
        // // $start_date = $today . "T00:00:00Z";
        // // $end_date = $today . "T23:59:59Z";

        // $order_id = "34R504318E675793L";

        // // $response = Http::withHeaders([
        // //     'Content-Type' => 'application/json',
        // //     'Authorization' => 'Basic ' . $encoded_auth,
        // // ])->get("https://api-m.sandbox.paypal.com/v1/reporting/transactions?fields=transaction_info,payer_info,shipping_info,auction_info,cart_info,incentive_info,store_info&transaction_id={$order_id}", [
        // //     'start_date' => '2023-12-01T00:00:00Z',
        // //     'end_date' => '2023-12-31T23:59:59Z',
        // // ]);

        // $bn_code='FLAVORsb-mnlme28649302_MP';
        // $response = Http::withHeaders([
        //     'Content-Type' => 'application/json',
        //     'Authorization' => 'Basic ' . $encoded_auth,
        // ])->get("https://api-m.sandbox.paypal.com/v1/reporting/transactions?fields=transaction_info,payer_info,shipping_info,auction_info,cart_info,incentive_info,store_info", [
        //     'start_date' => '2023-12-01T00:00:00Z',
        //     'end_date' => '2023-12-31T23:59:59Z',
        // ]);
        // if ($response->getBody()) {
        //     $data = $response->getBody();

        //     $jsonData = json_decode($data, true);
        //     // dd($jsonData);

        //     if (json_last_error() === JSON_ERROR_NONE) {
        //         // Data is in valid JSON format.
        //         return response()->json($jsonData);

        //         return response($data);

        //     } else {
        //         // Data is not in valid JSON format.
        //         // Handle the error as needed, e.g., log the error or throw an exception.
        //     }
        // }

        // dd($response);

        // return response()->json($response);



        -----------------------------------------------------------------------------------------------***


        *
        setTimeout(function () {
    document.getElementById("loading").classList.add("none");
}, 3000);

$(document).ready(function () {
    $("#chart").hide();
    // console.log("wdsbvsdb");
    // var data =  $("#data").val();

    // console.log(data);

    $.ajax({
        url: "/payment_data",
        type: "GET",
        success: function (data) {
            console.log(data);
            if (data) {
                var table = "<table class='fl-table'>";
                table +=
                    "<tr><th>xx</th><th>Sr.No</th><th>Name</th><th>Payment</th><th>Email</th><th>Transaction Id</th><th>Status</th><th>Date</th><th>Amount</th></tr>";
                var srNo = data.from;
                $("th").css("color", "blue");
                var transaction_details = data.transaction_details;

                var transactions = []; // Array to store all transactions
                var srNo = 1;
                $.each(transaction_details, function (index, transaction) {
                    var transaction_info = transaction.transaction_info;
                    var payer_info = transaction.payer_info;
                    var transaction_id = transaction_info.transaction_id;
                    var transaction_status =
                        transaction_info.transaction_status;
                    var transaction_updated_date =
                        transaction_info.transaction_updated_date;
                    var transaction_amount =
                        transaction_info.transaction_amount;
                    var amount = transaction_amount.value;
                    var number = amount;
                    var positiveNumber = Math.abs(number);

                    var account_id = payer_info.account_id;table +=
                            "<tr class='child-row' style='display: none;'>";
                        table +=
                            "<td colspan='8'>Child row content goes here</td>";
                            table +=
                            "<td class='alternate_full_name'>" +
                            alternate_full_name +
                            "</td>";
                    var email_address = payer_info.email_address;
                    var alternate_full_name =
                        payer_info.payer_name.alternate_full_name;

                    var reference_id = transaction_info.paypal_reference_id;

                    // Check if alternate_full_name is undefined
                    if (typeof alternate_full_name === "undefined") {
                        alternate_full_name = "Partner"; // Set a default value
                    }
                    if (typeof email_address === "undefined") {
                        email_address = "sb-mnlme28649302@business.example.com"; // default value
                    }
                    if (typeof account_id === "undefined") {
                        account_id = "xxxxxxxxxxx"; // Set a default value
                    }

                    // Create an object for the current transaction
                    var currentTransaction = {
                        id: transaction_id,
                        status: transaction_status,
                        updatedDate: transaction_updated_date,
                        amount: positiveNumber,
                        accountId: account_id,
                        emailAddress: email_address,
                        alternateFullName: alternate_full_name,
                        reference:reference_id,
                    };

                    // Add the current transaction to the transactions array
                    transactions.push(currentTransaction);

                    console.log(currentTransaction);

                    // Determine the payment type
                    var paymentType =
                        alternate_full_name === "Partner"
                            ? "Withdraw to"
                            : "Payment from";

                    // Add the parent row to the table
                    if (alternate_full_name != "Partner") {
                        table += "<tr>";
                        table +=
                            "<td><button class='toggle-rows'>+</button></td>"; // Add a "+" button to the parent row
                        table += "<td>" + srNo + "</td>";
                        table +=
                            "<td class='alternate_full_name'>" +
                            alternate_full_name +
                            "</td>";
                        table += "<td>" + paymentType + "</td>";
                        table += "<td>" + email_address + "</td>";
                        table += "<td>" + transaction_id + "</td>";
                        table += "<td>" + "Completed" + "</td>";
                        table += "<td>" + transaction_updated_date + "</td>";
                        table += "<td> $" + positiveNumber + "</td>";
                        table += "</tr>";


                        
            
                        // Add a hidden child row after each parent row
                        if( alternate_full_name == "Partner"){
                        table +=
                            "<tr class='child-row' style='display: none;'>";
                        table +=
                            "<td colspan='8'>Child row content goes here</td>";
                            table +=
                            "<td class='alternate_full_name'>" +
                            alternate_full_name +
                            "</td>";
                        table += "<td>" + paymentType + "</td>";
                        table += "<td>" + email_address + "</td>";
                        table += "<td>" + transaction_id + "</td>";
                        table += "<td>" + "Completed" + "</td>";
                        table += "<td>" + transaction_updated_date + "</td>";
                        table += "<td> $" + positiveNumber + "</td>";
                        table += "</tr>";
                        }
                    }

                    srNo++;
                });

                table += "</table>";
                // Add the table to the page (you might need to adjust the selector to match your page structure)
                $("#responseContainer").append(table);

                // Add a click event listener to the "+" buttons
                $(".toggle-rows").click(function () {
                    $(this).closest("tr").next(".child-row").toggle();
                });

                

                console.log(transactions);
            }
            // $("#responseContainer").html(table);    
        },
    });
});
$(document).ready(function () {
    loaddata();
});
function loaddata() {
    $.ajax({
        type: "GET",
        url: "/cart_data",
        success: function (data) {
            console.log(data);
            if (data != "") {
                $("#empty_cart").hide();
                console.log(data);
                var table = $("#responsecontainer").html();

                var total_price = 0;
                var total_quantity = 0;
                var srNo = 1;
                var templateRow = $("#responseContainer .bho").detach();
                $.each(data, function (index, data) {
                    var id = data.product_id;
                    console.log(id);
                    var quantity = data.quantity;
                    var price = data.price;
                    var product_name = data.name;
                    // var image = data.image;
                    total_price += quantity * price;
                    total_quantity += Number(quantity);
                    console.log(
                        "The total quantity for all rows is: " + total_quantity
                    );
                    //console.log('The total price for all rows is: ' + total_price);

                    var newRow = templateRow.clone();
                    newRow.find(".id").text(id);
                    newRow.find(".srno").text(srNo + ".");
                    newRow.find(".name").text(product_name);
                    newRow.find(".price").text(price);
                    newRow.find(".quantity").text(quantity);
                    newRow.find(".total").text(total_price);
                    $("#responseContainer").append(newRow);
                    srNo++;
                });

                $("#subtotal").html("$" + total_price);
                $("#grand").html("$" + total_price);

                $("#checkout").on("click", function () {
                    $.ajax({
                        type: "get",
                        data: {
                            price: total_price,
                        },
                        url: "/paypal/payment",
                        dataType: "json",
                        success: function (response) {
                            if (response.message == "success") {
                                window.location = response.location;
                            }
                        },
                    });
                });

                $(".row").on("click", function () {
                    var row = $(this).closest("tr");
                    var quantity = row.find("td:eq(4)").text();
                    var id = row.find("td:eq(0)").text();
                    console.log(id);

                    $.ajax({
                        type: "get",
                        data: {
                            id: id,
                            quantity: quantity,
                        },
                        url: "fetch_data",
                        dataType: "json",
                        success: function (response) {
                            console.log(response);
                            if (response) {
                                loaddata();
                            }
                        },
                    });
                });
                $(".delete-button").on("click", function () {
                    console.log("user clicked on it");
                    var row = $(this).closest("tr");
                    var id = row.find("td:eq(0)").text();
                    $.ajax({
                        type: "get",
                        data: {
                            id: id,
                        },
                        url: "remove_product",
                        dataType: "json",
                        success: function (response) {
                            if (response) {
                                loaddata();
                            }
                        },
                    });
                });
                $(".edit-button").on("click", function () {
                    var row = $(this).closest("tr");
                    var id = row.find("td:eq(0)").text();

                    $.ajax({
                        type: "get",
                        data: {
                            id: id,
                        },
                        url: "add_product",
                        dataType: "json",
                        success: function (response) {
                            if (response) {
                                loaddata();
                            }
                        },
                    });
                });
            } else {
                $("#main").hide();
            }
        },
    });
}
<x-app-layout>
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="{{ asset('css/cart.css') }}" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
            integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
            crossorigin="anonymous" referrerpolicy="no-referrer" />
        {{-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"> --}}
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    </head>

    <body>
        <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg">
            <div class="p-6 text-gray-900 dark:text-gray-100" style="margin-top: 60px;height: 600px;">
                <div class="empty"><span id="empty"></span></div>
                <div>
                    <h1 id="cart"></h1>
                </div>
                <div id="main">
                    <table id="responseContainer">
                        <tr>
                            <th>Sr.No</th>
                            <th>Product Name</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total Price</th>
                            <th>Add/Remove</th>
                        </tr>
                        <tr class="bho">
                            <td class="id"style="display: none"></td>

                            <td class="srno"></td>
                            <td class="name"></td>
                            <td class="price"></td>
                            <td class="quantity"></td>
                            <td class="total"></td>
                            <td class="button-container">
                                <button class="edit-button">+</button>
                                <button class="delete-button"id="remove">-</button>
                                <button class=row ><i class="fa fa-trash" aria-hidden="true"></i></button>
                                </td>

                        </tr>
                    </table>
                    </div>

                    
                    <div id="checkout">

                        <div class="col-lg-4 offset-lg-4">
                            <div class="checkout">
                                <ul style="
                            margin-top: 82px;
                            border-radius: 6px;
                        ">
                                    <li class="subtotal">subtotal
                                        <span id="subtotal">$</span>
                                    </li>
                                    <li class="cart-total">Total
                                        <span id="grand"></span>
                                    </li>
                                </ul>
                                <button type="button" id="checkout" class="btn btn-primary" style="
                            width: 595px;
                            margin-bottom: 51px;
                            font-size: 20px;
                            background-color: cornflowerblue;
                            ">CheckOut</button>

                            </div>
                        </div>
                    </div>
                </div>
                <div id="empty_cart">
                    <div class="container-fluid  mt-100">
                        <div class="row">

                            <div class="col-md-12">

                                <div class="card">
                                    <div class="card-header" style="
                                            display: flex;
                                            flex-direction: row;
                                            justify-content: center;
                                            font-size: 28px;
                                        ">
                                        <h5 style="
                                                display: flex;
                                            ">Your Cart is empty !</h5>
                                    </div>
                                    <div class="card-body cart">
                                        <div class="col-sm-12 empty-cart-cls text-center">
                                            <img src="{{ URL::asset('/images/cart.avif') }}"" width=" 130" height="130"
                                                class="img-fluid mb-4 mr-3" style="margin-left: 46%;">
                                            <h3><strong>Your Cart is Empty</strong></h3>
                                            <h4>Add something to make me happy :)</h4>
                                            <a href="{{ route('products') }}"
                                                class="btn btn-primary cart-btn-transform m-3" data-abc="true">continue
                                                shopping</a>

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </body>
    <script src="{{ asset('js/cart.js') }}"></script>

    </html>

</x-app-layout>